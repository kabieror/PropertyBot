name: Publish Docker Image

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
      
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}
      - name: Build and push Docker images
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: liofly/property-bot
          # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
          tags: $RELEASE_VERSION
          # Automatically tags the built image with the git reference as per the readme
          tag_with_ref: # optional
          # Automatically tags the built image with the git short SHA as per the readme
          tag_with_sha: # optional
          # Path to the build context
          path: # optional, default is .
          # Path to the Dockerfile (Default is '{path}/Dockerfile')
          dockerfile: # optional
          # Sets the target stage to build
          target: # optional
          # Always attempt to pull a newer version of the image
          always_pull: # optional
          # Comma-delimited list of build-time variables
          build_args: # optional
          # Comma-delimited list of images to consider as cache sources
          cache_froms: # optional
          # Comma-delimited list of labels to add to the built image
          labels: # optional
          # Adds labels with git repository information to the built image
          add_git_labels: # optional
          # Whether to push the image
          push: # optional, default is true
